<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Dy3LXMB33ZcHAAAAAElFTkSuQmCC
</value>
  </data>
</root>