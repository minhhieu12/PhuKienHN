<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>